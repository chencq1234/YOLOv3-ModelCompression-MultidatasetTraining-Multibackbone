[net]
# Testing
# batch=1
# subdivisions=1
# Training
batch=64
subdivisions=16
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1
# 0
[convolutional]
batch_normalize=1
filters=8
size=3
stride=1
pad=1
activation=leaky

# Downsample
# 1
[convolutional]
batch_normalize=1
filters=16
size=3
stride=2
pad=1
activation=leaky
# 2
[convolutional]
batch_normalize=1
filters=16
size=1
stride=1
pad=1
activation=leaky
# 3
[shortcut]
from=-2
activation=linear

# Downsample
# 4
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky
# 5
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky

# 6
[shortcut]
from=-2
activation=linear

# Downsample
# 7
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=leaky
# 8
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky
# 9
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

# 10
[route]
layers = -3
# 11
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky
# 12
[route]
layers = -1, -3

# 13
[shortcut]
from= -6
activation=linear

# Downsample
# 14
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky
# 15
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky
# 16
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky
# 17
[shortcut]
from= -2
activation=linear

# 18
[route]
layers = -4
# 19
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky
# 20
[route]
layers = -6
# 21
[maxpool]
stride=2
size=2
# 22
[route]
layers = -1, -3, -5
# 23
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky
# 24
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky
# 25
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky
# 26
[shortcut]
from=-2
activation=linear

# 27
[route]
layers = -4
# 28
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky
# 29
[route]
layers = -6
# 30
[maxpool]
stride=2
size=2
# 31
[route]
layers = -1, -3, -5
# 32
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky
# 33
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

# 34
### SPP ###
[maxpool]
stride=1
size=3

# 35
[route]
layers=-2

# 36
[maxpool]
stride=1
size=5

# 37
[route]
layers=-4
# 38
[maxpool]
stride=1
size=7
# 39
[route]
layers=-1,-3,-5,-6

### End SPP ###
# 40
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

# 41
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=128
activation=leaky
# 42
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# 43
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=128
activation=leaky
# 44
[convolutional]
size=1
stride=1
pad=1
filters=39
activation=linear


[yolo]
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
;anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401

classes=8
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

# 91
[route]
layers = -4
# 91
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky
# 92
[upsample]
stride=2

# 93
[route]
layers = -1, 23


# 94
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# 95
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=leaky

# 98
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# 99
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=128
activation=leaky
# 100
[convolutional]
size=1
stride=1
pad=1
filters=39
activation=linear


[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
;anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401
classes=8
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


# 103
[route]
layers = -4
# 103
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky
# 104
[upsample]
stride=2
# 105
[route]
layers = -1, 8


# 106
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky
# 107
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=64
activation=leaky
# 108
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

# 112
[convolutional]
size=1
stride=1
pad=1
filters=39
activation=linear


[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
;anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401
classes=8
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1